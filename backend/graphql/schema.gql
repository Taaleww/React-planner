# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProjectUserRole {
  projectUserRoleid: Int!
  user: User!
  project: Project!
  role: Role!
  created_at: DateTime!
  updated_at: DateTime!
}

enum Role {
  MANAGER
  EMPLOYEE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Project {
  projectId: Int!
  projectName: String!
  status: projectStatus!
  task: [Task!]!
  projectUserRole: [ProjectUserRole!]!
  description: String!
  startDate: DateTime
  dueDate: DateTime
  completeDate: DateTime
}

enum projectStatus {
  INPROGRESS
  DONE
  LATE
}

type Task {
  taskId: Int!
  project: Project!
  taskName: String!
  assign: [Assign!]!
  status: Status!
  startDate: DateTime
  dueDate: DateTime
  completeDate: DateTime
  description: String
  reporter: String!
  created_at: DateTime!
  updated_at: DateTime!
}

enum Status {
  TODO
  INPROGRESS
  DONE
}

type Assign {
  id: Int!
  task: Task!
  user: User!
  created_at: DateTime!
  updated_at: DateTime!
}

type User {
  userId: Int!
  projectUserRole: [ProjectUserRole!]!
  assign: [Assign!]!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  job: String!
  department: String!
  organization: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type Query {
  projects: [Project!]!
  project(id: Int!): Project!
  findProjectByUser(id: Int!): [ProjectUserRole!]!
  projectUserRoles: [ProjectUserRole!]!
  projectUserRole(id: Int!): ProjectUserRole!
  users: [User!]!
  user(id: Int!): User!
  email(email: String!): User!
  tasks: [Task!]!
  task(id: Int!): Task!
  assign(id: Int!): Assign!
}

type Mutation {
  createProject(createProjectInput: CreateProjectInput!): [ProjectUserRole!]!
  updateProject(updateProjectInput: UpdateProjectInput!): Project!
  removeProject(id: Int!): Int!
  createproject_user_role(createproject_user_roleInput: CreateProjectUserRoleInput!): ProjectUserRole!
  updateproject_user_role(updateproject_user_roleInput: UpdateProjectUserRole!): ProjectUserRole!
  removeproject_user_role(id: Int!): ProjectUserRole!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createTask(createTaskInput: CreateTaskInput!): Task!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
  removeTask(id: Int!): String!
  createAssign(createAssignInput: CreateAssignInput!): Assign!
  updateAssign(updateAssignInput: UpdateAssignInput!): Assign!
  removeAssign(id: Int!): Assign!
  login(loginInput: loginInput!): String!
}

input CreateProjectInput {
  projectName: String!
  status: projectStatus!
  description: String!
  startDate: DateTime
  dueDate: DateTime
  completeDate: DateTime
  members: [String!]!
}

input UpdateProjectInput {
  projectName: String
  status: projectStatus
  description: String
  startDate: DateTime
  dueDate: DateTime
  completeDate: DateTime
  members: [String!]
  id: Int!
}

input CreateProjectUserRoleInput {
  role: Role!
}

input UpdateProjectUserRole {
  role: Role
  id: Int!
}

input CreateUserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  job: String!
  departmant: String!
  organization: String!
}

input UpdateUserInput {
  email: String
  password: String
  firstName: String
  lastName: String
  job: String
  departmant: String
  organization: String
  id: Int!
}

input CreateTaskInput {
  projectId: Int!
  userId: [Int!]!
  taskName: String!
  status: Status!
  startDate: DateTime
  dueDate: DateTime
  completeDate: DateTime
  description: String
}

input UpdateTaskInput {
  projectId: Int
  userId: [Int!]
  taskName: String
  status: Status
  startDate: DateTime
  dueDate: DateTime
  completeDate: DateTime
  description: String
  id: Int!
}

input CreateAssignInput {
  userId: Int!
  taskId: Int!
}

input UpdateAssignInput {
  userId: Int
  taskId: Int
  id: Int!
}

input loginInput {
  email: String!
  password: String!
}
